drop table if exists tally;
drop table if exists ranking;
drop table if exists ballot;
drop table if exists voter;
drop table if exists candidate;
drop table if exists election;
drop table if exists user;

create table user (
    id int not null auto_increment,
    name varchar(255) not null unique,
    email varchar(255) not null unique,
    password varchar(255) not null,
    primary key(id)
);

create table election (
    id int not null auto_increment primary key,
    owner_id int not null,
    name varchar(255) not null unique,
    end datetime,
    secret boolean not null,
    status varchar(20) not null
        check (status in ('editing', 'live', 'complete')),
    foreign key fk_owner(owner_id)
        references user(id)
);

create table candidate (
    id int not null auto_increment primary key,
    election_id int not null,
    name varchar(255) not null,
    foreign key fk_election(election_id)
        references election(id)
);
alter table candidate add unique unique_candidate(election_id, name);

create table voter (
    id int not null auto_increment primary key,
    election_id int not null,
    user_id int not null,
    foreign key fk_election(election_id)
        references election(id),
    foreign key fk_user(user_id)
        references user(id)
);
alter table voter add unique unique_voter(election_id, user_id);

create table ballot (
     id int not null auto_increment primary key,
     user_id int not null,
     election_id int not null,
     when_cast datetime not null,
     foreign key fk_user(user_id)
        references user(id),
     foreign key fk_election(election_id)
        references election(id)
);
alter table ballot add unique unique_ballot(user_id, election_id);

create table ranking (
    id int not null auto_increment primary key,
    ballot_id int not null,
    candidate_id int not null,
    rank int,
    foreign key fk_ballot(ballot_id)
        references ballot(id),
    foreign key fk_candidate(candidate_id)
        references candidate(id)
);
alter table ranking add unique unique_ranking(ballot_id, candidate_id);

create table tally (
    id int not null auto_increment primary key,
    election_id int not null,
    candidate_id int not null,
    rank int not null,
    foreign key fk_election(election_id)
        references election(id),
    foreign key fk_candidate(candidate_id)
        references candidate(id)
);
alter table tally add unique unique_tally(election_id, candidate_id);


insert into user (name, email, password) values ("Alice", "alice@email.com", "password");
insert into user (name, email, password) values ("Bob", "bob@email.com", "password");
insert into user (name, email, password) values ("Carol", "carol@email.com", "password");
insert into user (name, email, password) values ("Dave", "dave@email.com", "password");

# election_id 1 Favorite Ice Cream
insert into election
(owner_id, name, end, secret, status) values
(1, "Favorite Ice Cream", null, 1, "live");
insert into candidate (election_id, name) values (1, "Chocolate");
insert into candidate (election_id, name) values (1, "Vanilla");
insert into candidate (election_id, name) values (1, "Strawberry");
insert into voter (election_id, user_id) values (1, 1);
insert into voter (election_id, user_id) values (1, 3);

# election_id 2 Government
insert into election
(owner_id, name, end, secret, status) values
(1, "Government", null, 1, "live");
insert into candidate (election_id, name) values (2, "Monarchy");
insert into candidate (election_id, name) values (2, "Aristocracy");
insert into candidate (election_id, name) values (2, "Democracy");
insert into voter (election_id, user_id) values (2, 1);
insert into voter (election_id, user_id) values (2, 2);
insert into voter (election_id, user_id) values (2, 3);
insert into voter (election_id, user_id) values (2, 4);

# election_id 3 Dystopia
insert into election
(owner_id, name, end, secret, status) values
(1, "Dystopia", null, 1, "live");
insert into candidate (election_id, name) values (3, "1984");
insert into candidate (election_id, name) values (3, "Fahrenheit 451");
insert into candidate (election_id, name) values (3, "Brave New World");
insert into voter (election_id, user_id) values (3, 1);
insert into voter (election_id, user_id) values (3, 2);
insert into voter (election_id, user_id) values (3, 3);
insert into voter (election_id, user_id) values (3, 4);

# election_id 4 Pet
insert into election
(owner_id, name, end, secret, status) values
(2, "Pet", null, 1, "live");
insert into candidate (election_id, name) values (4, "Cat");
insert into candidate (election_id, name) values (4, "Dog");
insert into candidate (election_id, name) values (4, "Bird");
insert into candidate (election_id, name) values (4, "Fish");
insert into candidate (election_id, name) values (4, "Reptile");
insert into voter (election_id, user_id) values (4, 1);
insert into voter (election_id, user_id) values (4, 2);
insert into voter (election_id, user_id) values (4, 4);

# election_id 5 Science Fiction
insert into election
(owner_id, name, end, secret, status) values
(3, "Science Fiction", null, 1, "editing");
insert into candidate (election_id, name) values (5, "Babylon 5");
insert into candidate (election_id, name) values (5, "Star Trek");
insert into candidate (election_id, name) values (5, "Blake's 7");
insert into candidate (election_id, name) values (5, "Firefly");
insert into voter (election_id, user_id) values (5, 1);
insert into voter (election_id, user_id) values (5, 2);
insert into voter (election_id, user_id) values (5, 3);
insert into voter (election_id, user_id) values (5, 4);

# election_id 6 Fantasy
insert into election
(owner_id, name, end, secret, status) values
(4, "Fantasy", null, 1, "editing");
insert into candidate (election_id, name) values (6, "Marvel Cinematic Universe");
insert into candidate (election_id, name) values (6, "Lord of the Rings");
insert into candidate (election_id, name) values (6, "Harry Potter");
insert into voter (election_id, user_id) values (6, 1);
insert into voter (election_id, user_id) values (6, 2);
insert into voter (election_id, user_id) values (6, 3);
insert into voter (election_id, user_id) values (6, 4);


# Users
select * from user;

# Candidates
select
     user.name as owner,
     election.name,
     election.end,
     election.secret,
     election.status,
     candidate.name as candidate
from election
inner join candidate
on election.id = candidate.election_id
inner join user
on election.owner_id = user.id;

# Voters
select
     user_owner.name as owner,
     election.name,
     election.end,
     election.secret,
     election.status,
     user_voter.name as voter
from election
inner join voter
on election.id = voter.election_id
inner join user as user_owner
on election.owner_id = user_owner.id
inner join user as user_voter
on voter.user_id = user_voter.id;
